[
{
	"uri": "//localhost:1313/vi/",
	"title": "Building a Serverless Text-to-Speech Application with Amazon Polly",
	"tags": [],
	"description": "",
	"content": "Làm việc với Amazon System Manager - Session Manager Tổng quan Trong bài lab này, bạn sẽ tìm hiểu các khái niệm cơ bản và thực hành về Amazon System Manager - Session Management. Thực hành tạo kết nối đến máy chủ public và máy chủ private trong VPC.\nNội dung Giới thiệu Các bước chuẩn bị Tạo kết nối đến máy chủ EC2 Quản lý session logs Port Forwarding Dọn dẹp tài nguyên "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/",
	"title": "Chuẩn bị Tài nguyên",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta cần tạo một bảng DynamoDB, một thùng Amazon S3, tạo một chủ đề SNS. Sau đó, tạo các hàm Lambda cho sự kiện.\n"
},
{
	"uri": "//localhost:1313/vi/0-tablecontent/",
	"title": "Mục Lục",
	"tags": [],
	"description": "",
	"content": "Mục tiêu Khi hoàn thành wordshop này bạn sẽ có thể:\nTạo bảng Amazon DynamoDB để lưu trữ dữ liệu Tạo API RESTful của Amazon API Gateway Tạo các hàm AWS Lambda được kích hoạt bởi API Gateway Kết nối các chức năng AWS Lambda với Amazon Simple Notification Service (SNS) Sử dụng Amazon Polly để tổng hợp giọng nói bằng nhiều ngôn ngữ và giọng nói khác nhau\nThờ gian Buổi hội thảo này mất khoảng 90 phút để hoàn thành.\nMôi trường và hướng đi Bạn xây dựng một ứng dụng không máy chủ , nghĩa là bạn không cần phải làm việc với máy chủ — không cần cung cấp, không cần vá lỗi, không cần mở rộng quy mô. AWS Cloud sẽ tự động xử lý việc này, cho phép bạn tập trung vào ứng dụng của mình.\nỨng dụng cung cấp hai phương thức – một để gửi thông tin về bài đăng mới, sau đó chuyển đổi thành tệp MP3, và một để truy xuất thông tin về bài đăng (bao gồm liên kết đến tệp MP3 được lưu trữ trong kho lưu trữ Amazon S3). Cả hai phương thức đều được triển khai dưới dạng dịch vụ web RESTful thông qua Amazon API Gateway. Khi ứng dụng gửi thông tin về bài đăng mới:\n1.Thông tin được tiếp nhận bởi dịch vụ web RESTful được Amazon API Gateway cung cấp. Dịch vụ web này được gọi bởi một trang web tĩnh được lưu trữ trên Amazon Simple Storage Service (Amazon S3).\n2.Amazon API Gateway kích hoạt hàm AWS Lambda, New Post , có nhiệm vụ khởi tạo quá trình tạo tệp MP3.\n3.Hàm Lambda chèn thông tin về bài đăng vào bảng Amazon DynamoDB, nơi lưu trữ thông tin về tất cả các bài đăng.\n4.Để chạy toàn bộ quy trình một cách không đồng bộ, bạn sử dụng Amazon Simple Notification Service (Amazon SNS) để tách quá trình nhận thông tin về bài đăng mới và bắt đầu chuyển đổi âm thanh của chúng.\n5.Một chức năng Lambda khác, Chuyển đổi thành Âm thanh , được đăng ký theo chủ đề SNS của bạn và được kích hoạt bất cứ khi nào có tin nhắn mới xuất hiện (có nghĩa là bài đăng mới sẽ được chuyển đổi thành tệp âm thanh).\n6.Chức năng Chuyển đổi sang âm thanh Lambda sử dụng Amazon Polly để chuyển đổi văn bản thành tệp âm thanh bằng ngôn ngữ đã chỉ định (cùng ngôn ngữ với ngôn ngữ của văn bản).\n7.Tệp MP3 mới được lưu trong thùng S3 chuyên dụng.\n8.Thông tin về bài đăng được cập nhật trong bảng DynamoDB. URL đến tệp âm thanh được lưu trữ trong thùng S3 được lưu cùng với dữ liệu đã lưu trữ trước đó.\nKhi ứng dụng lấy thông tin về bài đăng:\n1.Dịch vụ web RESTful được triển khai bằng Amazon API Gateway. Amazon API Gateway cung cấp phương thức truy xuất thông tin về các bài đăng. Các phương thức này chứa nội dung bài đăng và liên kết đến kho lưu trữ S3 nơi lưu trữ tệp MP3. Dịch vụ web được gọi bởi một trang web tĩnh được lưu trữ trên Amazon S3.\n2.Amazon API Gateway gọi hàm Get Post Lambda, triển khai logic để truy xuất dữ liệu bài đăng.\n3.Hàm Get Post Lambda sẽ truy xuất thông tin về bài đăng (bao gồm tham chiếu đến Amazon S3) từ bảng DynamoDB và trả về thông tin.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/2.1.1-createvpc/",
	"title": "Tạo bảng DynamoDB ",
	"tags": [],
	"description": "",
	"content": "Tạo bảng DynamoDB Lab DynamoDB Ở đầu AWS Management Console, trong thanh tìm kiếm, hãy tìm kiếm và chọn DynamoDB.\nChọn tạo bảng.\nTạo một bảng DynamoDB mới với:\nTên bảng: posts\nKhóa phân vùng: (Chuỗi)id\nCài đặt bảng : Cài đặt mặc định\nChọn : Tạo bảng\nBây giờ không cần phải định nghĩa toàn bộ cấu trúc của bảng. Sau khi hoàn tất thiết lập ứng dụng, thông tin sau sẽ được lưu trữ trong bảng DynamoDB:\nid: ID của bài đăng. trạng thái: ĐÃ CẬP NHẬT hoặc ĐANG XỬ LÝ , tùy thuộc vào việc tệp MP3 đã được tạo hay chưa. văn bản: Văn bản của bài đăng mà tệp âm thanh đang được tạo. giọng nói: Giọng nói Amazon Polly được sử dụng để tạo tệp âm thanh. url: Liên kết đến thùng S3 nơi lưu trữ tệp âm thanh. "
},
{
	"uri": "//localhost:1313/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Xây dựng ứng dụng chuyển văn bản thành giọng nói không cần máy chủ với Amazon Polly\nNhìn chung, việc tổng hợp giọng nói không hề dễ dàng. Bạn không thể cho rằng khi một ứng dụng đọc từng chữ cái của một câu, kết quả đầu ra sẽ có nghĩa. Một số thách thức thường gặp đối với các ứng dụng chuyển văn bản thành giọng nói bao gồm:\nCác từ được viết theo cùng một cách nhưng phát âm khác nhau: Tôi sống ở Las Vegas so với Bài thuyết trình này được phát sóng trực tiếp từ Las Vegas . Chuẩn hóa văn bản: Phân biệt các từ viết tắt, từ viết tắt và đơn vị: St. , có thể mở rộng thành Street hoặc Saint . Chuyển đổi văn bản thành âm vị trong các ngôn ngữ có cách ánh xạ phức tạp, chẳng hạn như trong tiếng Anh, tough , through và though . Trong ví dụ này, các phần tương tự của các từ khác nhau có thể được phát âm khác nhau tùy thuộc vào từ và ngữ cảnh. Từ nước ngoài ( déjà vu ), tên riêng ( François Hollande ) và tiếng lóng ( ASAP , LOL ). Amazon Polly cung cấp chức năng tổng hợp giọng nói giúp khắc phục những thách thức này, cho phép bạn tập trung vào việc xây dựng các ứng dụng sử dụng công nghệ chuyển văn bản thành giọng nói thay vì giải quyết các thách thức về phiên dịch.\nAmazon Polly biến văn bản thành giọng nói chân thực. Nó cho phép bạn tạo các ứng dụng nói chuyện tự nhiên, cho phép bạn xây dựng các danh mục sản phẩm hỗ trợ giọng nói hoàn toàn mới. Amazon Polly là một dịch vụ AI của Amazon sử dụng công nghệ học sâu tiên tiến để tổng hợp giọng nói nghe giống như giọng nói của con người. Hiện tại, nó bao gồm hàng chục giọng nói chân thực với hơn 20 ngôn ngữ, vì vậy bạn có thể chọn giọng nói lý tưởng và xây dựng các ứng dụng hỗ trợ giọng nói hoạt động ở nhiều quốc gia khác nhau.\nNgoài ra, Amazon Polly còn mang đến thời gian phản hồi nhanh chóng, ổn định, cần thiết để hỗ trợ hội thoại tương tác thời gian thực. Bạn có thể lưu trữ đệm và lưu trữ các tệp âm thanh của Polly để phát lại hoặc phân phối lại ngoại tuyến. Nói cách khác, những gì bạn chuyển đổi và lưu trữ là của bạn. Không có thêm phí chuyển đổi văn bản thành giọng nói khi sử dụng giọng nói. Polly cũng rất dễ sử dụng. Bạn chỉ cần gửi văn bản muốn chuyển đổi thành giọng nói đến API Amazon Polly. Amazon Polly sẽ ngay lập tức trả lại luồng âm thanh về ứng dụng của bạn để ứng dụng có thể phát trực tiếp hoặc lưu trữ ở định dạng tệp âm thanh tiêu chuẩn như MP3.\nTrong buổi hội thảo này, bạn sẽ tạo một ứng dụng cơ bản, không cần máy chủ, sử dụng Amazon Polly để chuyển đổi văn bản thành giọng nói. Ứng dụng có giao diện người dùng đơn giản, chấp nhận văn bản ở nhiều ngôn ngữ khác nhau và sau đó chuyển đổi thành tệp âm thanh để bạn có thể phát từ trình duyệt web. Buổi hội thảo này sử dụng các bài đăng trên blog, nhưng bạn có thể sử dụng bất kỳ loại văn bản nào. Ví dụ: bạn có thể sử dụng ứng dụng để đọc công thức nấu ăn khi đang chuẩn bị bữa ăn, hoặc đọc tin tức hoặc sách khi đang lái xe hoặc đạp xe.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/2.1.2-createpublicsubnet/",
	"title": "Tạo thùng Amazon S3",
	"tags": [],
	"description": "",
	"content": "Tạo thùng Amazon S3 Bạn cần tạo một thùng Amazon S3 để lưu trữ tất cả các tệp âm thanh do ứng dụng tạo ra. Bạn tạo một thùng với tên duy nhất, chẳng hạn như audioposts-123456789 . Ở đầu AWS Management Console, trong thanh tìm kiếm, hãy tìm kiếm và chọn S3.\nChọn Tạo thùng và cấu hình các thông tin chi tiết sau:\nTên thùng: audioposts-NUMBER Thay thế NUMBER bằng một số ngẫu nhiên Sao chép tên nhóm vào trình soạn thảo văn bản khi bạn sử dụng tên nhóm sau này. Trong Quyền sở hữu đối tượng , chọn ACL được bật Trong phần Cài đặt chặn quyền truy cập công khai cho nhóm này, hãy bỏ chọn tùy chọn Chặn tất cả quyền truy cập công khai , sau đó bỏ chọn tất cả các tùy chọn khác . Lưu ý: tất cả các tùy chọn riêng lẻ vẫn được bỏ chọn. Khi bỏ chọn tất cả quyền truy cập công khai, bạn phải chọn các tùy chọn riêng lẻ áp dụng cho tình huống và mục tiêu bảo mật của mình. Trong môi trường sản xuất, nên sử dụng cài đặt ít quyền hạn nhất có thể.\nMột hộp cảnh báo xuất hiện với nội dung: Việc tắt tùy chọn chặn tất cả quyền truy cập công khai có thể khiến bucket này và các đối tượng bên trong trở thành công khai. AWS khuyến nghị bạn nên bật tùy chọn chặn tất cả quyền truy cập công khai, trừ khi quyền truy cập công khai là bắt buộc cho các trường hợp sử dụng cụ thể và đã được xác minh, chẳng hạn như lưu trữ trang web tĩnh.\nChọn hộp kiểm bên cạnh Tôi xác nhận rằng các cài đặt hiện tại có thể khiến nhóm này và các đối tượng bên trong trở nên công khai . Chọn Tạo thùng. Lưu ý: Mỗi thùng Amazon S3 phải có tên duy nhất.\nThận trọng: Nếu bạn nhận được lỗi có nội dung Tên thùng được yêu cầu không khả dụng, hãy chọn liên kết Chỉnh sửa ở trên cùng, thay đổi tên thùng và thử lại cho đến khi hoạt động.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/2.1.3-createprivatesubnet/",
	"title": "Tạo chủ đề SNS",
	"tags": [],
	"description": "",
	"content": "Tạo chủ đề SNS Như bạn có thể đã thấy trong sơ đồ kiến trúc, logic chuyển đổi bài đăng (văn bản) thành tệp âm thanh được chia thành hai hàm AWS Lambda. Điều này được thực hiện vì một vài lý do.\nĐầu tiên, nó cho phép ứng dụng sử dụng các lệnh gọi bất đồng bộ để người dùng gửi bài đăng mới đến ứng dụng sẽ nhận được ngay ID của mục DynamoDB mới, nhờ đó ứng dụng biết cần yêu cầu gì sau đó mà không cần phải chờ quá trình chuyển đổi hoàn tất. Với các bài đăng nhỏ, quá trình chuyển đổi thành tệp âm thanh có thể mất vài mili giây, nhưng với các bài đăng lớn hơn (100.000 từ trở lên), việc chuyển đổi văn bản có thể mất nhiều thời gian hơn. Trong các trường hợp sử dụng khác, chẳng hạn như phát trực tuyến thời gian thực, kích thước không phải là vấn đề vì Amazon Polly bắt đầu phát trực tuyến giọng nói ngay khi có byte đầu tiên.\nThứ hai, hệ thống sử dụng hàm Lambda để chuyển đổi các bài đăng.\nVì quy trình đã được chia thành hai quy trình, cần phải có cách để tích hợp chúng lại với nhau. Bạn sử dụng Amazon SNS để gửi thông báo về bài đăng mới từ chức năng đầu tiên đến chức năng thứ hai.\n1.Ở đầu AWS Management Console, trong thanh tìm kiếm, hãy tìm kiếm và chọn .Simple Notification Service\n2.Trong ngăn điều hướng bên trái, chọn Chủ đề .\nLưu ý: Bạn có thể cần mở rộng ngăn điều hướng bằng cách chọn biểu tượng menu. 1.ChọnTạo chủ đềvà cấu hình các thông tin chi tiết sau:\nLoại: Chọn Tiêu chuẩn Tên: new_posts Tên hiển thị: New Posts 1.Ở cuối trang, chọn Tạo chủ đề.\n2.Sao chép ARN chủ đề và dán vào trình soạn thảo văn bản để sử dụng sau.\nĐầu ra dự kiến: arn:aws:sns:us-west-2:123456789012:new_posts\nLưu ý: Bạn cấu hình các hàm Lambda để sử dụng Topic ARN này sau trong phòng thí nghiệm. "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/",
	"title": "Các bước chuẩn bị và thực hiện",
	"tags": [],
	"description": "",
	"content": "\rBạn cần chuẩn bị tài khoản AWS với quyền quản trị có thể truy cập vào AWS Management Console để bắt đầu dự án\nKhởi chạy ngăn xếp CloudFormation\nMẫu AWS CloudFormation được sử dụng để thiết lập tài nguyên phòng thí nghiệm trong Khu vực AWS mà bạn chọn. Bước này là bắt buộc vì các hướng dẫn sau sẽ dựa trên các tài nguyên này. Mẫu CloudFormation cung cấp các tài nguyên sau:\nVai trò IAM.\nBảng Amazon DynamoDB.\nMáy trạng thái chức năng bước AWS.\n1.Tải xuống mẫu CloudFormation\n2.Lưu trữ tệp mẫu YAML trong một thư mục trên máy cục bộ của bạn.\n3.Điều hướng đến CloudFormation trong AWS Management Console .\n4.Trên bảng điều khiển CloudFormation, chọn Tải lên tệp mẫu .\n5.Chọn mẫu mà bạn vừa tải xuống, sau đó chọn Tiếp theo .\n6.Đặt tên cho ngăn xếp, chẳng hạn nhưpolly-serverless-stack\n7.Đối với tùy chọn Cấu hình ngăn xếp , hãy giữ nguyên giá trị mặc định và chọn Tiếp theo .\n8.Trong Khả năng và chuyển đổi , hãy thừa nhận tất cả.\n9.Để triển khai mẫu, hãy chọn Gửi .\n10.Sau khi mẫu được triển khai, để xem lại các tài nguyên đã tạo, hãy điều hướng đến Tài nguyên CloudFormation và sau đó chọn ngăn xếp CloudFormation mà bạn đã tạo.\nViệc triển khai Cloud Formation mất khoảng 1–2 phút để hoàn tất.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/2.1.4-createsecgroup/",
	"title": "Tạo hàm Lambda ",
	"tags": [],
	"description": "",
	"content": "Tạo hàm Lambda cho bài đăng mới Hàm Lambda đầu tiên bạn tạo là điểm vào cho ứng dụng. Nó nhận thông tin về các bài đăng mới cần được chuyển đổi thành tệp âm thanh.\n1.Ở đầu AWS Management Console, trong thanh tìm kiếm, hãy tìm kiếm và chọn Lambda.\n2.Chọn Tạo hàm.\n3.Chọn Tác giả từ đầu và sử dụng các cài đặt sau:\nTên hàm: PostReader_NewPost Thời gian chạy: Python 3.12 Mở rộng Thay đổi vai trò thực thi mặc định Vai trò thực thi: Chọn Sử dụng vai trò hiện có Vai trò hiện tại: Chọn Lab-Lambda-Role 1.Chọn Tạo hàm.\n2.Nhập mã: Xóa mã hiện có và dán mã sau:\nimport boto3\rimport os\rimport uuid\rdef lambda_handler(event, context):\rrecordId = str(uuid.uuid4())\rvoice = event[\u0026quot;voice\u0026quot;]\rtext = event[\u0026quot;text\u0026quot;]\rprint('Generating new DynamoDB record, with ID: ' + recordId)\rprint('Input Text: ' + text)\rprint('Selected voice: ' + voice)\r# Creating new record in DynamoDB table\rdynamodb = boto3.resource('dynamodb')\rtable = dynamodb.Table(os.environ['DB_TABLE_NAME'])\rtable.put_item(\rItem={\r'id' : recordId,\r'text' : text,\r'voice' : voice,\r'status' : 'PROCESSING'\r}\r)\r# Sending notification about new post to SNS\rclient = boto3.client('sns')\rclient.publish(\rTopicArn = os.environ['SNS_TOPIC'],\rMessage = recordId\r)\rreturn recordId Kiểm tra mã. Hàm Lambda thực hiện các chức năng sau:\nLấy hai tham số đầu vào: Giọng nói: Một trong hàng chục giọng nói được Amazon Polly hỗ trợ. Văn bản: Văn bản của bài đăng mà chúng ta muốn chuyển đổi thành tệp âm thanh. Tạo một bản ghi mới trong bảng DynamoDB với thông tin về bài đăng mới. Xuất bản thông tin về bài đăng mới lên SNS (ID của mục/ID bài đăng DynamoDB được xuất bản ở đó dưới dạng tin nhắn). Trả về ID của mục DynamoDB cho người dùng. Chọn Triển khai. Lưu ý: Hàm Lambda cần biết tên bảng DynamoDB và chủ đề SNS. Để cung cấp các giá trị này, bạn sử dụng biến môi trường. Đây là một cách tuyệt vời để truyền thông tin đến một hàm mà không cần mã hóa cứng các giá trị vào chính hàm đó.\n1.Chọn tab Cấu hình để cấu hình các biến môi trường.\n2.Trong ngăn điều hướng bên trái, chọn Biến môi trường .\n3.Trong phần Biến môi trường , chọn Biên tập.\nChọn Thêm biến môi trường. Phím: Nhập DB_TABLE_NAME Giá trị: Nhập posts 1.Chọn lưu. 2.Trong ngăn điều hướng bên trái của tab Cấu hình , chọn Cấu hình chung .\nCập nhật thời gian chờ thành 10 giây 1.Chọn lưu.\nHàm New Post Lambda đã sẵn sàng! Bây giờ bạn có thể kiểm tra xem hàm có hoạt động không.\n1.Chọn tab Kiểm tra và cấu hình các thông tin chi tiết sau:\nTên sự kiện: Joanna\nNhập mã: Xóa mã hiện có và dán mã sau:\n{\r\u0026quot;voice\u0026quot;: \u0026quot;Joanna\u0026quot;,\r\u0026quot;text\u0026quot;: \u0026quot;This is working!\u0026quot;\r}\r1.Chọn Lưu.\n2.Chọn Bài kiểm tra để chạy sự kiện thử nghiệm của bạn.\nBạn sẽ thấy thông báo: Kết quả thực hiện: thành công .\nBạn có thể mở rộng phần Chi tiết để xem nhật ký thực thi.\nHàm New Post Lambda trả về một ID và bạn có thể thấy các giá trị đầu vào trong đầu ra Nhật ký .\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/2.1.5-createec2linux/",
	"title": "Tạo hàm Lambda chuyển đổi sang âm thanh",
	"tags": [],
	"description": "",
	"content": "Bây giờ bạn tạo một hàm Lambda để chuyển đổi văn bản được lưu trữ trong bảng DynamoDB thành tệp âm thanh.\n1.Chọn Chức năng ở ngăn điều hướng phía trên bên trái.\nLưu ý: Bạn có thể cần mở rộng ngăn điều hướng bằng cách chọn biểu tượng menu.\n1.Chọn Tạo hàm. 2.Chọn Tác giả từ đầu và sử dụng các cài đặt sau:\nTên hàm: ConvertToAudio Thời gian chạy: Python 3.12 Mở rộng Thay đổi vai trò thực thi mặc định Vai trò thực thi: Chọn Sử dụng vai trò hiện có Vai trò hiện tại: Chọn Lab-Lambda-Role 1.Cuộn xuống và chọn Tạo hàm. 2.Nhập mã: Xóa mã hiện có và dán mã sau:\nimport boto3\rimport os\rfrom contextlib import closing\rfrom boto3.dynamodb.conditions import Key, Attr\rdef lambda_handler(event, context):\rpostId = event[\u0026quot;Records\u0026quot;][0][\u0026quot;Sns\u0026quot;][\u0026quot;Message\u0026quot;]\rprint (\u0026quot;Text to Speech function. Post ID in DynamoDB: \u0026quot; + postId)\r# Retrieving information about the post from DynamoDB table\rdynamodb = boto3.resource('dynamodb')\rtable = dynamodb.Table(os.environ['DB_TABLE_NAME'])\rpostItem = table.query(\rKeyConditionExpression=Key('id').eq(postId)\r)\rtext = postItem[\u0026quot;Items\u0026quot;][0][\u0026quot;text\u0026quot;]\rvoice = postItem[\u0026quot;Items\u0026quot;][0][\u0026quot;voice\u0026quot;]\rrest = text\r# Because single invocation of the polly synthesize_speech api can\r# transform text with about 3000 characters, we are dividing the\r# post into blocks of approximately 2500 characters.\rtextBlocks = []\rwhile (len(rest) \u0026gt; 2600):\rbegin = 0\rend = rest.find(\u0026quot;.\u0026quot;, 2500)\rif (end == -1):\rend = rest.find(\u0026quot; \u0026quot;, 2500)\rtextBlock = rest[begin:end]\rrest = rest[end:]\rtextBlocks.append(textBlock)\rtextBlocks.append(rest)\r# For each block, invoke Polly API, which transforms text into audio\rpolly = boto3.client('polly')\rfor textBlock in textBlocks:\rresponse = polly.synthesize_speech(\rOutputFormat='mp3',\rText = textBlock,\rVoiceId = voice\r)\r# Save the audio stream returned by Amazon Polly on Lambda's temp\r# directory. If there are multiple text blocks, the audio stream\r# is combined into a single file.\rif \u0026quot;AudioStream\u0026quot; in response:\rwith closing(response[\u0026quot;AudioStream\u0026quot;]) as stream:\routput = os.path.join(\u0026quot;/tmp/\u0026quot;, postId)\rif os.path.isfile(output):\rmode = \u0026quot;ab\u0026quot; # Append binary mode\relse:\rmode = \u0026quot;wb\u0026quot; # Write binary mode (create a new file)\rwith open(output, mode) as file:\rfile.write(stream.read())\rs3 = boto3.client('s3')\rs3.upload_file('/tmp/' + postId,\ros.environ['BUCKET_NAME'],\rpostId + \u0026quot;.mp3\u0026quot;)\rs3.put_object_acl(ACL='public-read',\rBucket=os.environ['BUCKET_NAME'],\rKey= postId + \u0026quot;.mp3\u0026quot;)\rlocation = s3.get_bucket_location(Bucket=os.environ['BUCKET_NAME'])\rregion = location['LocationConstraint']\rif region is None:\rurl_beginning = \u0026quot;https://s3.amazonaws.com/\u0026quot;\relse:\rurl_beginning = \u0026quot;https://s3-\u0026quot; + str(region) + \u0026quot;.amazonaws.com/\u0026quot;\rurl = url_beginning \\\r+ str(os.environ['BUCKET_NAME']) \\\r+ \u0026quot;/\u0026quot; \\\r+ str(postId) \\\r+ \u0026quot;.mp3\u0026quot;\r# Updating the item in DynamoDB\rresponse = table.update_item(\rKey={'id':postId},\rUpdateExpression=\r\u0026quot;SET #statusAtt = :statusValue, #urlAtt = :urlValue\u0026quot;,\rExpressionAttributeValues=\r{':statusValue': 'UPDATED', ':urlValue': url},\rExpressionAttributeNames=\r{'#statusAtt': 'status', '#urlAtt': 'url'},\r)\rreturn\rKiểm tra mã. Hàm Lambda thực hiện các chức năng sau:\nTruy xuất ID của mục DynamoDB (ID bài đăng) cần được chuyển đổi thành tệp âm thanh từ thông báo đầu vào (sự kiện SNS) Lấy mục từ DynamoDB Chuyển đổi văn bản thành luồng âm thanh Đặt tệp âm thanh (MP3) vào thùng S3 Cập nhật bảng DynamoDB bằng tham chiếu đến thùng S3 và trạng thái mới Phương thức synthesize_speech nhận văn bản cần chuyển đổi và giọng nói được sử dụng. Đổi lại, nó cung cấp luồng âm thanh . Vấn đề là văn bản đầu vào bị giới hạn ở 3000 ký tự. Vì một bài đăng có thể rất dài, các bài đăng cần được chia thành các khối khoảng 2500 ký tự, tùy thuộc vào vị trí kết thúc của từ cuối cùng trong khối. Sau khi chuyển đổi các khối thành luồng âm thanh, chúng sẽ được nối lại với nhau.\n1.Chọn Triển Khai. Tương tự như hàm New Post , bạn cần cho hàm Lambda này biết những dịch vụ nào mà nó có thể tương tác thông qua các biến Môi trường.\n1.Chọn tab Cấu hình để cấu hình các biến môi trường.\n2.Trong ngăn điều hướng bên trái, chọn Biến môi trường .\n3.Trong phần Biến môi trường , hãy chọn Biên tập.\nChọn Thêm biến môi trường\nPhím: NhậpDB_TABLE_NAME Giá trị: Nhập posts Chọn Thêm biến môi trường\nPhím: Nhập BUCKET_NAME\nGiá trị: Nhập tên của bucket bạn đã tạo trước đó. Tên sẽ trông tương tự như sau: audioposts-123\n1.Chọn Lưu.\nCác bài đăng cần chuyển đổi có thể khá lớn, vì vậy bạn cần kéo dài thời gian tối đa thực thi một mã lên 5 phút.\n1.Trong phần Cấu hình chung , hãy chọn Biên tập.\nCập nhật thời gian chờ thành 5phút. 1.Chọn Lưu.\nBây giờ bạn cấu hình chức năng để tự động kích hoạt khi có tin nhắn được gửi đến chủ đề SNS mà bạn đã tạo trước đó.\n1.Trong phần Triggers , hãy chọn Thêm kích hoạt và sau đó cấu hình:\nChọn nguồn :SNS Chủ đề SNS : Chọn từ các chủ đề có sẵn .new_posts 1.Chọn Thêm vào.\nBây giờ bạn đã sẵn sàng để kiểm tra xem hai hàm Lambda có giao tiếp thành công qua SNS hay không và tạo tệp âm thanh Polly. "
},
{
	"uri": "//localhost:1313/vi/4-cleanup/",
	"title": "Kết luận và dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Phần kết luận Bạn đã thực hiện thành công các bước sau:\nĐã tạo một bảng Amazon DynamoDB để lưu trữ dữ liệu Đã tạo API RESTful của Amazon API Gateway Đã tạo các hàm AWS Lambda được kích hoạt bởi API Gateway Các chức năng AWS Lambda được kết nối với Amazon Simple Notification Service (SNS) Sử dụng Amazon Polly để tổng hợp giọng nói bằng nhiều ngôn ngữ và giọng nói khác nhau Trong phòng thí nghiệm này, bạn đã tạo một ứng dụng chuyển đổi văn bản thành giọng nói ở hàng chục ngôn ngữ và giọng nói. Mặc dù ứng dụng này chuyển đổi bài đăng trên blog thành giọng nói, nó có thể được sử dụng cho nhiều mục đích khác, chẳng hạn như chuyển đổi văn bản trên trang web hoặc thêm chức năng giọng nói vào các ứng dụng web.\nỨng dụng hoàn toàn không cần máy chủ. Không cần bảo trì hoặc vá lỗi máy chủ. Theo mặc định, ứng dụng có tính khả dụng cao vì AWS Lambda, Amazon API Gateway, Amazon S3 và Amazon DynamoDB sử dụng nhiều Vùng Khả dụng.\nVậy bây giờ thì sao? Hãy sử dụng phương pháp này để hình dung và xây dựng các ứng dụng mới mang lại trải nghiệm người dùng tốt hơn nhiều so với trước đây.\nTài nguyên bổ sung\nXem bài viết Amazon Polly\nAmazon Polly là gì?\nAmazon API Gateway là gì?\nAWS Lambda là gì?\nDọn dẹp Bạn đang tổ chức hội thảo này trên tài khoản AWS của mình, vui lòng xóa ngăn xếp CloudFormation để tránh bất kỳ khoản phí bất ngờ nào trên hóa đơn AWS của bạn.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/2.1.6-createec2windows/",
	"title": "Kiểm tra các chức năng",
	"tags": [],
	"description": "",
	"content": "Bây giờ bạn hãy thử quy trình làm việc sau:\nKích hoạt thủ công chức năng New Post Lambda Nó lưu trữ dữ liệu trong DynamoDB và gửi tin nhắn đến chủ đề SNS SNS kích hoạt chức năng Chuyển đổi thành âm thanh , sử dụng Polly để tạo tệp âm thanh và lưu trữ trong thùng S3 1.Chọn Chức năng ở góc trên bên trái.\nLưu ý: Bạn có thể cần mở rộng ngăn điều hướng bằng cách chọn biểu tượng menu.\n1.Chọn hàm PostReader_NewPost .\n2.Chọn Kiểm tra.\nBạn sẽ thấy thông báo: Kết quả thực hiện: thành công . Điều này cho biết hàm này đã được thực thi. Bây giờ bạn xác nhận rằng các bước khác cũng đã hoàn tất thành công.\n1.Ở đầu AWS Management Console, trong thanh tìm kiếm, hãy tìm kiếm và chọn .DynamoDB\n2.Trong ngăn điều hướng bên trái, chọn Khám phá mục .\n3.Chọn bài đăng .\nBạn sẽ thấy hai mục nhập vì bạn đã chạy thử nghiệm hai lần. Lần thực thi thứ hai cũng sẽ kích hoạt hàm Convert to Audio Lambda, do đó cũng có một mục nhập cho url . 1.Ở đầu AWS Management Console, trong thanh tìm kiếm, hãy tìm kiếm và chọn .Lambda\n2.Chọn chức năng ConvertToAudio .\n3.Chọn tab Giám sát .\nBiểu đồ giám sát phải chỉ ra rằng chức năng đã được gọi. 1.Chọn Xem nhật ký CloudWatch\n2.Chọn Luồng nhật ký được hiển thị trong danh sách\n3.Mở rộng các mục nhật ký để khám phá thông báo lỗi\nVí dụ, nếu bạn nhận được lỗi The specified bucket does not exist (Không tồn tại thùng được chỉ định) , thì bạn cần xác nhận rằng tên thùng bạn nhập vào Biến môi trường khớp với tên thùng S3 bạn đã tạo trước đó trong phòng thí nghiệm. Nếu chức năng Chuyển đổi thành âm thanh được thực hiện thành công, bạn sẽ thấy tệp MP3 trong thùng S3 của mình.\n1.Ở đầu AWS Management Console, trong thanh tìm kiếm, hãy tìm kiếm và chọn .S3\n2.Chọn nhóm bài đăng âm thanh của bạn .\nBạn sẽ thấy một tệp MP3. Tải xuống và nghe nội dung — bạn sẽ nghe thấy giọng Joanna của Polly nói \u0026ldquo;Cách này hiệu quả đấy!\u0026rdquo; "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/2.1.7-getpost/",
	"title": "Tạo hàm Lambda get posts",
	"tags": [],
	"description": "",
	"content": "Hàm Get Post Lambda cuối cùng cung cấp phương pháp để lấy thông tin về các bài đăng từ cơ sở dữ liệu.\n1.Ở đầu AWS Management Console, trong thanh tìm kiếm, hãy tìm kiếm và chọn Lambda.\n2.Chọn Tạo hàm.\n3.Chọn Tác giả từ đầu và sử dụng các cài đặt sau:\nTên hàm: PostReader_GetPost Thời gian chạy: Python 3.12 Mở rộng Thay đổi vai trò thực thi mặc định Vai trò thực thi: Chọn Sử dụng vai trò hiện có Vai trò hiện tại: Chọn Lab-Lambda-Role 1.Cuộn xuống và chọn Tạo hàm.\n2.Nhập mã: Xóa mã hiện có và dán mã sau:\nimport boto3\rimport os\rfrom boto3.dynamodb.conditions import Key, Attr\rdef lambda_handler(event, context):\rpostId = event[\u0026quot;postId\u0026quot;]\rdynamodb = boto3.resource('dynamodb')\rtable = dynamodb.Table(os.environ['DB_TABLE_NAME'])\rif postId==\u0026quot;*\u0026quot;:\ritems = table.scan()\relse:\ritems = table.query(\rKeyConditionExpression=Key('id').eq(postId)\r)\rreturn items[\u0026quot;Items\u0026quot;]\rLần này, mã rất ngắn. Hàm này dự kiến sẽ lấy ID bài đăng (ID mục DynamoDB) và dựa trên ID này, nó sẽ truy xuất tất cả thông tin (bao gồm cả liên kết S3 đến tệp âm thanh nếu có) rồi trả về. Để thân thiện hơn với người dùng nếu tham số đầu vào là dấu sao (*), hàm Lambda sẽ trả về tất cả các mục từ cơ sở dữ liệu. Đối với cơ sở dữ liệu có nhiều mục, hãy tránh sử dụng phương pháp này vì nó có thể làm giảm hiệu suất và có thể mất nhiều thời gian.\n1.Chọn Triển khai.\nMột lần nữa, bạn cần cung cấp tên bảng DynamoDB làm biến môi trường cho hàm.\n1.Chọn tab Cấu hình để cấu hình các biến môi trường.\n2.Trong ngăn điều hướng bên trái, chọn Biến môi trường .\n3.Trong phần Biến môi trường , hãy chọn Biên tập.\nChọn Thêm biến môi trường\nPhím: Nhập DB_TABLE_NAME Giá trị: Nhập posts 1.Chọn Lưu. Bây giờ bạn có thể kiểm tra chức năng này!\n1.Trong tab 88 , hãy tạo sự kiện kiểm tra của bạn bằng các tham số sau:\nTên sự kiện AllPosts\nNhập mã: Thay thế mã hiện tại bằng mã sau:\n{\r\u0026quot;postId\u0026quot;: \u0026quot;*\u0026quot;\r}\r1.Chọn Lưu. 2.Chọn Bài kiểm tra để chạy sự kiện thử nghiệm.\nBạn sẽ thấy thông báo: Kết quả thực hiện: **thành công **\nNếu bạn mở rộng phần **Chi tiết **, bạn sẽ thấy danh sách tất cả các bản ghi từ bảng DynamoDB. "
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/2.1.8-restful/",
	"title": "Trình bày chức năng Lambda như một dịch vụ web RESTful",
	"tags": [],
	"description": "",
	"content": "Điều cuối cùng bạn cần làm là triển khai logic ứng dụng dưới dạng dịch vụ web RESTful để có thể dễ dàng gọi bằng giao thức HTTP chuẩn. Để làm điều này, bạn sử dụng Amazon API Gateway.\n1.Ở đầu AWS Management Console, trong thanh tìm kiếm, hãy tìm kiếm và chọn .API Gateway\n2.Trong bảng điều khiển Rest API , hãy chọn Xây dựng.\n3.Trong phần Tạo API REST , để biết chi tiết về API , hãy sử dụng các tham số sau:\nChọn API mới Tên API: PostReaderAPI Sự miêu tả: API for PostReader Application Loại điểm cuối: Khu vực 1.Chọn Tạo API.\nSau khi API được tạo, bạn cần tạo hai phương thức HTTP .\nBạn bắt đầu bằng cách cấu hình phương thức POST để gọi hàm Lambda PostReader_NewPost . 1.Trong ngăn Phương pháp , hãy chọn Tạo phương thức.\n2.Đối với loại Phương thức , hãy chọn POST .\n3.Đối với Hàm Lambda , hãy chọn hàm có chứa PostReader_NewPost trong tên.\n4.Chọn Tạo phương thức.\nĐối với phương thức GET , API sẽ gọi hàm Lambda PostReader_GetPost . 1.Trong ngăn Tài nguyên , chọn biểu tượng / phía trên POST .\n2.Trong ngăn Phương pháp , hãy chọn Tạo phương thức.\n3.Đối với loại Phương thức , chọn GET .\n4.Đối với Hàm Lambda , hãy chọn hàm có chứa PostReader_GetPost trong tên.\n5.Chọn Tạo phương thức.\nPhương pháp cuối cùng cần cấu hình là CORS (Chia sẻ tài nguyên xuyên nguồn). Phương pháp này cho phép gọi API từ một trang web có tên máy chủ khác. 1.Trong ngăn Tài nguyên , chọn biểu tượng / phía trên GET .\n2.Trong ngăn Chi tiết tài nguyên , hãy chọn Kích hoạt CORS.\n3.Đối với phản hồi của Gateway , hãy chọn Mặc định 4XX và Mặc định 5XX .\n4.Đối với Access-Control-Allow-Methods , hãy chọn GET và POST .\n5.Chọn Lưu. Bây giờ bạn cấu hình phương thức GET cho tham số truy vấn postId , cung cấp thông tin về id của bài đăng cần trả về. 1.Chọn phương thức GET .\n2.Trong ngăn Cài đặt yêu cầu phương pháp , hãy chọn Biên tập.\n3.Mở rộng phần tham số chuỗi truy vấn URL .\n4.Chọn Thêm chuỗi truy vấn.\n5.Đối với Tên , nhập .postId\n6.Chọn Lưu.\nHàm Lambda PostReader_GetPost dự kiến sẽ nhận dữ liệu đầu vào ở định dạng JSON, do đó, API cần được cấu hình để ánh xạ tham số sang định dạng này. Để thực hiện việc này, bạn có thể thêm ánh xạ vào cấu hình Yêu cầu Tích hợp. 1.Chọn tab Yêu cầu tích hợp .\n2.Trong ngăn cài đặt Yêu cầu tích hợp , hãy chọn Biên tập.\n3.Đối với Yêu cầu chuyển tiếp nội dung , hãy chọn Khi không có mẫu nào được xác định (được đề xuất) .\n4.Mở rộng mẫu bản đồ .\n5.Chọn Thêm mẫu ánh xạ.\n6.Đối với Loại nội dung , hãy nhập .application/json\n7.Đối với phần thân mẫu , hãy nhập:\n{\r\u0026quot;postId\u0026quot; : \u0026quot;$input.params('postId')\u0026quot;\r}\r1.Chọn Lưu.\nAPI đã sẵn sàng để triển khai! 1.ChọnTriển khai API.\nGiai đoạn: Chọn Giai đoạn mới Tên: Dev ChọnTriển khai 1.Sao chép giá trị Invoke URL và lưu vào trình soạn thảo văn bản để sử dụng sau.\nLưu ý: URL được sử dụng sau này để tương tác với ứng dụng.\n"
},
{
	"uri": "//localhost:1313/vi/2-prerequiste/2.1-createec2/2.1.9-serverlessuser/",
	"title": "Tạo giao diện người dùng không có máy chủ",
	"tags": [],
	"description": "",
	"content": "Mặc dù ứng dụng đã hoạt động đầy đủ, nhưng nó chỉ được hiển thị dưới dạng dịch vụ web RESTful. Bây giờ bạn triển khai một trang web nhỏ trên Amazon S3, một lựa chọn tuyệt vời để lưu trữ các trang web tĩnh. Trang web này sử dụng JavaScript để kết nối với API và cung cấp chức năng chuyển văn bản thành giọng nói trong trang web.\n1.Tải các tập tin này về máy tính của bạn, nhấp chuột phải và chọn \u0026ldquo;Lưu liên kết dưới dạng\u0026hellip;\u0026rdquo;.\nindex.html scripts.js styles.css Lưu ý: Đảm bảo rằng mỗi tệp đều giữ nguyên tên tệp, bao gồm cả phần mở rộng.\n2.Chỉnh sửa tệp scripts.js của bạn bằng Trình soạn thảo văn bản, thay thế YOUR_API_GATEWAY_ENDPOINT (ở dòng đầu tiên) bằng URL Invoke mà bạn đã sao chép trước đó.\nĐầu ra dự kiến:\nvar API_ENDPOINT = \u0026quot;https://xxxxx.execute-api.us-west-2.amazonaws.com/Dev\u0026quot;\rBây giờ bạn tải các tệp này lên thùng Amazon S3. 1.Ở đầu AWS Management Console, trong thanh tìm kiếm, hãy tìm kiếm và chọn S3.\n2.Chọn Tạo thùng và cấu hình các thông tin chi tiết sau:\nTên thùng: www-BUCKET Thay thế BUCKET bằng tên thùng bài đăng âm thanh của bạn Sao chép tên nhóm vào trình soạn thảo văn bản. Bạn sẽ sử dụng tên nhóm sau. Bạn thay đổi quyền của bucket để mọi người đều có thể truy cập trang web. Trong Quyền sở hữu đối tượng , chọn ACL được bật Trong phần Cài đặt chặn quyền truy cập công khai cho nhóm này, hãy bỏ chọn tùy chọn Chặn tất cả quyền truy cập công khai , sau đó bỏ chọn tất cả các tùy chọn khác . Lưu ý: Lưu ý tất cả các tùy chọn riêng lẻ vẫn được bỏ chọn. Khi bỏ chọn tất cả quyền truy cập công khai, bạn phải chọn các tùy chọn riêng lẻ áp dụng cho tình huống và mục tiêu bảo mật của mình. Trong môi trường sản xuất, nên sử dụng cài đặt ít quyền hạn nhất có thể.\nMột hộp cảnh báo xuất hiện với nội dung: Việc tắt tùy chọn chặn tất cả quyền truy cập công khai có thể khiến bucket này và các đối tượng bên trong trở thành công khai. AWS khuyến nghị bạn nên bật tùy chọn chặn tất cả quyền truy cập công khai, trừ khi quyền truy cập công khai là bắt buộc cho các trường hợp sử dụng cụ thể và đã được xác minh, chẳng hạn như lưu trữ trang web tĩnh.\nChọn hộp kiểm bên cạnh Tôi xác nhận rằng các cài đặt hiện tại có thể khiến nhóm này và các đối tượng bên trong trở nên công khai .\nChọn Tạo thùng\n1.Sau khi tạo xong bucket, hãy chọn bucket đó từ danh sách bucket và tải ba tệp lên bucket www mới của bạn .\nLưu ý: Các tệp phải được đặt tên là: index.html , scripts.js và styles.css\n1.Trên trang nhóm, chọn tab Quyền ở trên cùng.\n2.Cuộn xuống phần Chính sách nhóm và chọn Biên tập.\n3.Dán chính sách này vào trình soạn thảo:\n{\r\u0026quot;Version\u0026quot;: \u0026quot;2012-10-17\u0026quot;,\r\u0026quot;Statement\u0026quot;: [\r{\r\u0026quot;Sid\u0026quot;: \u0026quot;PublicReadGetObject\u0026quot;,\r\u0026quot;Effect\u0026quot;: \u0026quot;Allow\u0026quot;,\r\u0026quot;Principal\u0026quot;: \u0026quot;*\u0026quot;,\r\u0026quot;Action\u0026quot;: [\r\u0026quot;s3:GetObject\u0026quot;\r],\r\u0026quot;Resource\u0026quot;: [\r\u0026quot;arn:aws:s3:::www-BUCKET/*\u0026quot;\r]\r}\r]\r}\r1.Thay thế www-BUCKET bằng tên nhóm www-audioposts của bạn.\n2.Chọn Lưu thay đổi.\nCẢNH BÁO: Nếu bạn nhận được lỗi Chính sách có tài nguyên không hợp lệ , hãy xác nhận rằng bạn đã chỉnh sửa dòng Tài nguyên cho khớp với tên nhóm của mình.\nLưu ý: Bạn có thể bỏ qua cảnh báo This bucket has public access . Điều này là cố ý.\nCuối cùng, bạn kích hoạt dịch vụ lưu trữ trang web tĩnh , giúp cho bucket hoạt động giống như một trang web tĩnh.\n1.Chọn tab Thuộc tính .\n2.Bỏ qua lỗi Quyền AWS CloudTrail .\n3.Cuộn xuống phần Lưu trữ trang web tĩnh và chọn Biên tập.\n4.Chọn Bật cho dịch vụ lưu trữ trang web tĩnh .\nTài liệu chỉ mục: index.html Tài liệu lỗi: index.html Lưu ý: Hiện tại chúng tôi đang sử dụng tệp index.html làm tài liệu lỗi.\nChọn: Lưu thay đổi. 1.Sao chép URL điểm cuối vào bảng tạm của bạn.\nVậy là xong! Bây giờ bạn có thể kiểm tra xem trang web có hoạt động không.\n1.Mở một tab trình duyệt web mới và dán URL Điểm cuối mà bạn vừa sao chép.\nBạn sẽ thấy một trang trông như thế này: Nếu bạn viết gì đó vào vùng văn bản và chọn Nói đi, sự kiện sẽ được gửi đến ứng dụng của bạn. Ứng dụng sẽ chuyển đổi văn bản thành tệp âm thanh một cách không đồng bộ. Tùy thuộc vào kích thước văn bản bạn cung cấp, quá trình chuyển đổi có thể mất vài giây hoặc vài phút.\nĐể xem các bài đăng và tệp âm thanh của chúng, hãy nhập ID bài đăng hoặc *vào hộp Tìm kiếm: 1.Nhấn nút Phát để nghe âm thanh.\n"
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]